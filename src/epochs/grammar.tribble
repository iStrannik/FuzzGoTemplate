start = Template;
Template = (Text | GoAction) (Text | GoAction)*;
GoAction = CommentAction | PipelineAction | IfAction | RangeAction | TemplateAction | BlockAction | WithAction ;
CommentAction = LD "/*" Text "*/" RD ;
PipelineAction = LD ( Pipeline | VarDeclarePipeline | VarAssignPipeline ) RD ;
IfAction = LD " if " Pipeline RD Template ( LD " else " (" if " Pipeline)? RD Template )? End ;
RangeAction = LD " range " ( Pipeline | VarDeclarePipeline ) RD Template ( LD " else " RD Template)? End ;
TemplateAction = LD " template " Name (Pipeline)? RD ;
BlockAction = LD " block " Name (Pipeline)? RD ;
WithAction = LD " with " Pipeline RD Template ( LD " else " RD Template)? End ;
Pipeline = Argument ( "|" Argument )* | MethodCall | FuncCall ;
VarDeclarePipeline =  Variable (" , " Variable)? " := " Pipeline ;
VarAssignPipeline =  Variable " = " Pipeline ;
Argument = Constant | " nil " | Variable | Fields | FuncCall | ("(" Argument " ) " Fields? ) ;
Variable = " $ " (Name)? ;
Fields = (Variable)? " . " Name ( " . " Name)? ;
FuncCall = Name ( Argument )* ;
MethodCall = ( Variable | Fields ) ( Argument )* ;
End = LD " end " RD ;
LD = " {{ " (" - ")? ;
RD = (" - ")? " }} " ;
Name = Letter ( Letter | Digit )* ;
Text = "TEXT\n " ;
Constant = "CONSTANT";
Letter = /[a-zA-Z]/;
Digit = /[0-9]/ ;